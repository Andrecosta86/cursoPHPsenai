algoritmo " RESPOSTAS QUESTÃO 4"
// Função :) 4 - Reescreva as instruções abaixo com o mínimo de parênteses possível, mas sem alterar o

// Autor :   ANDRE COSTA
// Data : 08/03/2023
// Seção de Declarações
var
a , b , c , d , k , f , g , h , i , j , a1 , b1 , c1 , d1 , k1 , f1 , g1 , h1 , i1 , j1 : real
inicio
// Seção de Comandos
escreval ("LETRA --> A ")
escreval (" A <--6*(3+2)")
a:=6*(3+2)
escreval ("o resultado desta instrução com () é", a)
a1:=6*5
escreval (" A <--6*5")
escreval ("o resultado desta instrução com o minimo de () é", a1)
escreval ("")
//
escreval ("LETRA--> B ")
b:=2+(6*(3+2))
escreval ("B <--2+(6*(3+2))")
escreval ("o resultado desta instrução com () é", b)
b1:=2+6*5
escreval ("B <--2+6*5")
escreval ("o resultado desta instrução com o minimo de () é", b1)

escreval ("")
escreval ("LETRA --> C ")
c:= 2+(3*6)/(2+4)
escreval ("C <-- 2+(3*6)/(2+4)")
escreval ("o resultado desta instrução com () é", c)
c1:=2+3*6/(2+4)
escreval ("C <--  2+3*6/(2+4)")
escreval ("o resultado desta instrução com o minimo de () é", c1)
escreval ("")

escreval ("LETRA --> D ")
d:= 2*(8/(3+1))
escreval ("D <-- 2*(8/(3+1))")
escreval ("o resultado desta instrução com () é", d)
d1:=2*8/(3+1)
escreval ("D <--  2*8/(3+1)")
escreval ("o resultado desta instrução com o minimo de () é", d1)
escreval ("")

escreval ("LETRA --> E ")
k:= 3+(16-2)/(2*(9-2))
escreval ("E <-- 3+(16-2)/(2*(9-2))")
escreval ("o resultado desta instrução com () é", k)
k1:=3+14/(2*7)
escreval ("E <--  3+14/(2*7")
escreval ("o resultado desta instrução com o minimo de () é", k1)
escreval ("")

escreval ("LETRA --> F ")
f:= (6/3)+(8/2)
escreval ("F <--  (6/3)+(8/2)")
escreval ("o resultado desta instrução com () é", f)
f1:= 6/3+8/2
escreval ("F <--  6/3+8/2)")
escreval ("o resultado desta instrução com o minimo de () é", f1)
escreval ("")

escreval ("LETRA --> G ")
escreval (" G <-- ((3+(8/2))*4)+(3*2)")
g:=((3+(8/2))*4)+(3*2)
escreval ("o resultado desta instrução com () é", g)
g1:=((3+8/2)*4)+3*2
escreval (" G <-- ((3+8/2)*4)+3*2")
escreval ("o resultado desta instrução com o minimo de () é", g1)
escreval ("")

escreval ("LETRA --> G ")
escreval (" H <-- (6*(3*3)+6)-10")
h:=(6*(3*3)+6)-10
escreval ("o resultado desta instrução com () é", h)
h1:=6*3*3+6-10
escreval (" H <-- 6*3*3+6-10")
escreval ("o resultado desta instrução com o minimo de () é", h1)
escreval ("")

escreval ("LETRA --> I ")
escreval (" I <-- (((10*8)+3)*9)")
i:=(((10*8)+3)*9)
escreval ("o resultado desta instrução com () é", i)
i1:=((10*8)+3)*9
escreval (" I <-- ((10*8)+3)*9")
escreval ("o resultado desta instrução com o minimo de () é", i1)
escreval ("")

escreval ("LETRA --> J ")
escreval (" J <-- ((-12)*(-4))+(3*(-4))")
j:=((-12)*(-4))+(3*(-4))
escreval ("o resultado desta instrução com () é", j)
j1:=-12*-4+3*-4
escreval (" J <-- -12*-4+3*-4")
escreval ("o resultado desta instrução com o minimo de () é", j1)
escreval ("")
escreval ("")
escreval  (" /\_/\")
escreval  ("(>'.'<)")
escreval  ("(U   U)")
escreval ("__~^_^~__")
fimalgoritmo
